# This file contains common pin mappings for the BIGTREETECH MMBCan V2.0
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PD0/PD1)".
# The "MMB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu MMB]
serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
#canbus_uuid: 0e0d81e4210c

# EZ Driver1
[ez_driver1]
step_pin: MMB:PD4
dir_pin: MMB:PD3
enable_pin: !MMB:PD5
microsteps: 16
rotation_distance: 40

# EZ Driver2
[ez_driver2]
step_pin: MMB:PC9
dir_pin: MMB:PC8
enable_pin: !MMB:PD2
microsteps: 16
rotation_distance: 40

# EZ Driver3
[ez_driver3]
step_pin: MMB:PC15
dir_pin: MMB:PC11
enable_pin: !MMB:PC10
microsteps: 16
rotation_distance: 40

# EZ Driver4
[ez_driver4]
step_pin: MMB:PC13
dir_pin: MMB:PC12
enable_pin: !MMB:PC14
microsteps: 16
rotation_distance: 40

#i2c_bus: i2c3_PC0_PC1

#[servo my_servo1]
#pin: MMB:PA1

#[servo my_servo2]
#pin: MMB:PA0

#[gcode_button sensor]
#pin: MMB:PC2

#[neopixel mmb_neopixel]
#pin: MMB:PC3

#[gcode_button endstop1]
#pin: MMB:PA15

#[gcode_button endstop2]
#pin: MMB:PA10

#[gcode_button endstop3]
#pin: MMB:PD9

#[gcode_button endstop4]
#pin: MMB:PD8


########################################
# 2*7 pin header
########################################

#[gcode_button in_h_0]
#pin: MMB:PC7

#[gcode_button in_h_1]
#pin: MMB:PA9

#[gcode_button in_h_2]
#pin: MMB:PB12

#[gcode_button in_h_3]
#pin: MMB:PB10

#[gcode_button in_h_4]
#pin: MMB:PB1

#[gcode_button in_h_5]
#pin: MMB:PC5

#[gcode_button in_l_0]
#pin: MMB:PC6

#[gcode_button in_l_1]
#pin: MMB:PA8

#[gcode_button in_l_2]
#pin: MMB:PB11

#[gcode_button in_l_3]
#pin: MMB:PB2

#[gcode_button in_l_4]
#pin: MMB:PB0

#[gcode_button in_l_5]
#pin: MMB:PC4

########################################
# TMC2209 configuration
########################################

#[tmc2209 ez_driver1]
#uart_pin: MMB:PB5
##diag_pin: MMB:PB9
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2209 ez_driver2]
#uart_pin: MMB:PB4
##diag_pin: MMB:PB8
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2209 ez_driver3]
#uart_pin: MMB:PB3
##diag_pin: MMB:PB7
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2209 ez_driver4]
#uart_pin: MMB:PD6
##diag_pin: MMB:PB6
#run_current: 0.800
#stealthchop_threshold: 999999

########################################
# TMC2130 configuration
########################################

#[tmc2130 ez_driver1]
#cs_pin: MMB:PB5
#spi_bus: spi1
##diag1_pin: MMB:PB9
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2130 ez_driver2]
#cs_pin: MMB:PB4
#spi_bus: spi1
##diag1_pin: MMB:PB8
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2130 ez_driver3]
#cs_pin: MMB:PB3
#spi_bus: spi1
##diag1_pin: MMB:PB7
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2130 ez_driver4]
#cs_pin: MMB:PD6
#spi_bus: spi1
##diag1_pin: MMB:PB6
#run_current: 0.800
#stealthchop_threshold: 999999


#-----------------------------------


## Enraged Rabbit : Carrot Feeder config file with config for unknown mcu
##
## EASY-BRD Setup Notes:
## J6 Jumper setting:
## Option 1: Pins 2-3 and 4-5, i.e.  .[..][..]
##   This is for sensorless selector setup. Note that this enables the option disables the "extra"
##   switch so the toolhead sensor (if used) would have to be connected to the main mcu
## Option 2: Pins 1-2 and 4-5, i.e.  [..].[..]
##   It you are NOT using sensorless selector. The "extra" switch is enabled for other uses
##
## No jumper configuration is required on this board, but have 12v/24v supply connected
## Firmware install:
##   > make menuconfig (rpi2040, No bootloader)
##   > make
## Put card in boot loader mode:Press & Hold ‘BOOTSEL’ ; click ‘RST’ ; Release ‘BOOTSEL’
##   > make flash FLASH_DEVICE=2e8a:0003
##  
#   delete all above when done
#---------------------------------------------------------------------

# This file contains common pin mappings for the BIGTREETECH MMBCan V2.0
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PD0/PD1)".
# The "MMB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.
[mcu ercf]
 canbus_uuid=


# FILAMENT DRIVE GEAR STEPPER  ---------------------------------------------------------------------------------------------
# Adapt accordingly to your setup and desires
# The default values are tested with the BOM NEMA14 motor
# Please adapt these values to the motor you are using
# Example : for NEMA17 motors, you'll usually set the stealthchop_threshold to 0
# and use higher current
[tmc2209 manual_extruder_stepper gear_stepper]
uart_pin: MMB:PB5
# uart_address: 0
interpolate: True
run_current: 0.9			# NEMA14 motor
hold_current: 0.4			# Can be small
sense_resistor: 0.110
stealthchop_threshold: 0	# 999999 to enable stealthChop
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 20
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 3
driver_PWM_AUTOGRAD: True
driver_PWM_AUTOSCALE: True
driver_PWM_LIM: 12
driver_PWM_REG: 8
driver_PWM_FREQ: 1
driver_PWM_GRAD: 14
driver_PWM_OFS: 36
driver_SGTHRS: 0

[manual_extruder_stepper gear_stepper]
step_pin: MMB:PD4
dir_pin: MMB:PD3
enable_pin: !MMB:PD5  # V1.0
# enable_pin: !ercf:PB8  # V1.1
rotation_distance: 22.7316868		# Bondtech 5mm Drive Gears. Must be manually verified and tuned.
gear_ratio: 50:17
microsteps: 8 				# Recommend 8 or 16. Try both to avoid Klipper 'Timer too close' error (also try adjusting num_moves)
full_steps_per_rotation: 200		# 200 for 1.8 degree, 400 for 0.9 degree
velocity: 50
accel: 400
#
# Uncomment if you want to use sensorless SELECTOR with the ERCF EASY BRD (yes, this is on the gear stepper!)
# This should be the pin of the physical selector endstop and is used to determine the difference between the true
# endstop and a blockage preventing selector movement. Don't forget to set 'sensorless_selector: 0' in ercf_parameters.cfg
endstop_pin: MMB:PA15	# Comment if using physical endstop switch (default)

# SELECTOR STEPPER  --------------------------------------------------------------------------------------------------------
[tmc2209 manual_stepper selector_stepper]
uart_pin: MMB:PB4
# uart_address: 1
run_current: 0.8		# NEMA17 motor
hold_current: 0.3		# Can be small if not using sensorless selector
interpolate: True
sense_resistor: 0.0750
stealthchop_threshold: 0	# 999999 to enable stealthChop
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 20
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 3
driver_PWM_AUTOGRAD: True
driver_PWM_AUTOSCALE: True
driver_PWM_LIM: 12
driver_PWM_REG: 8
driver_PWM_FREQ: 1
driver_PWM_GRAD: 14
driver_PWM_OFS: 36
driver_SGTHRS: 0
# Uncomment the lines below if you want to use sensorless selector homing
# (and configure ercf_parameters.cfg correctly)
# or comment out if using physical endstop switch (default)
#diag_pin: ^{selector_diag_pin}		# Set to MCU pin connected to TMC DIAG pin
#driver_SGTHRS: 75		# 255 is most sensitive value, 0 is least sensitive

[manual_stepper selector_stepper]
step_pin: MMB:PC9
dir_pin: MMB:PC8
enable_pin: !MMB:PD2
rotation_distance: 40
microsteps: 16 			# Don't need high fidelity
full_steps_per_rotation: 200	# 200 for 1.8 degree, 400 for 0.9 degree
velocity: 200
accel: 600
#
# Select the endstop switch physical (for normal selector) or virtual (sensorless selector homing)
#endstop_pin: tmc2209_selector_stepper:virtual_endstop	# Uncomment for sensorless selector homing
endstop_pin: MMB:PA10

# SELECTOR SERVO -----------------------------------------------------------------------------------------------------------
[ercf_servo ercf_servo]
pin: MMB:PA1
maximum_servo_angle: 180
minimum_pulse_width: 0.00085
maximum_pulse_width: 0.00215


## ENCODER -----------------------------------------------------------------------------------------------------------------
## The encoder_resolution is determined by running the ERCF_CALIBRATE_ENCODER. Be sure to read the manual
[ercf_encoder ercf_encoder]
encoder_pin: MMB:PC2
encoder_resolution: 1.344990	# Set AFTER 'rotation_distance' is tuned for gear stepper (see manual)
extruder: extruder		# The extruder to track with for runout/clog detection

# These are advanced but settings for Automatic clog detection mode. Make sure you understand or ask questions on Discord
desired_headroom: 8.0		# The runout headroom that ERCF will attempt to maintain (closest ERCF comes to triggering runout)
average_samples: 4		# The "damping" effect of last measurement. Higher value means clog_length will be reduced more slowly


## TOOLHEAD SENSOR ---------------------------------------------------------------------------------------------------------
# Uncomment this section to enable toolhead sensor support
#
# ERCF Toolhead sensor START
#[filament_switch_sensor toolhead_sensor]
#pause_on_runout: False		# Must be False
#switch_pin: ^EBBCan:PB9
# ERCF Toolhead sensor END